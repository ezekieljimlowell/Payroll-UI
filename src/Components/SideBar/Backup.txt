// const handleDashBoard = (event) => {
    //     setShowDashBoardContent(!showDashBoardContent);

        
    //     if(showDashBoardContent) {
    //        const anchorElement = document.getElementById("dashboard");
    //        anchorElement.className = Styles.rotate;
    //     }
    //     else {
    //         const anchorElement = document.getElementById("dashboard");
    //         anchorElement.classList.remove(Styles.rotate);
    //     }
    // }


    import AdminDashboard from "./AdminDashboard/AdminDashboard";
import EmployeeDashboard from "./EmployeeDashboard/EmployeeDashboard";
import { Chat } from './Applications/Chat';
import Calendar from "./Applications/Calendar";
import { Calls } from "./Applications/Calls";
import { Email } from "./Applications/Email";
import { FileManager } from "./Applications/FileManager";
import { Contacts } from "./Applications/Contacts";
import { AllEmployees } from "./Employees/AllEmployees";
import { Holidays } from "./Employees/Holidays";
import { LeavesAdmin } from "./Employees/LeavesAdmin";
import { LeavesEmployee } from "./Employees/LeavesEmployee";
import { LeaveSettings } from "./Employees/LeaveSettings";
import { AttendanceAdmin } from "./Employees/AttendanceAdmin";
import { AttendanceEmployee } from "./Employees/AttendanceEmployee";
import { Departments } from "./Employees/Departments";
import { Designations } from "./Employees/Designations";
import { Timesheet } from "./Employees/Timesheet";
import { ShiftAndSchedule } from "./Employees/ShiftAndSchedule";
import { Overtime } from "./Employees/Overtime";
import { Tasks } from "./Projects/Tasks";
import { Projects } from "./Projects/Projects";
import { TaskBoard } from "./Projects/TaskBoard";
import { Estimates } from "./Sales/Estimates";
import { Invoices } from "./Sales/Invoices";
import { Payments } from "./Sales/Payments";
import { ProvidentFund } from "./Sales/ProvidentFund";
import { Taxes } from "./Sales/Taxes";
import { Expenses } from "./Sales/Expenses";
import { BudgetRevenues } from "./Accounting/BudgetRevenues";
import { BudgetExpenses } from "./Accounting/BudgetExpenses";
import { Budgets } from "./Accounting/Budgets";
import { Categories } from "./Accounting/Categories";
import { EmployeeSalary } from "./Payroll/EmployeeSalary";
import { PayrollItems } from "./Payroll/PayrollItems";
import { Payslip } from "./Payroll/Payslip";





const data = React.useMemo(
        () => [
          {
            label: 'Series 1',
            data: [[2017, "1 million"], [2018, "2 million"], [2019, "3 million"], [2020, "4 million"], [2021, "5 million"]]
          },
          {
            label: 'Series 2',
            data: [[2017, "7 million"], [2018, "6 million"], [2019, "5 million"], [2020, "6 million"], [2021, "6 million"]]
          }
        ],
        []
      )
     
      const axes = React.useMemo(
        () => [
          { primary: true, type: 'ordinal', position: 'bottom' },
          { type: 'ordinal', position: 'left' }
        ],
        []
      )



options={{
                                    title: {
                                        display: true,
                                        text: 'Largest Cities in Massachusetts',
                                        fontSize: 25
                                    },
                                    legend: {
                                        display: true,
                                        position: "right"
                                    }
                                }}




                                const getRevenueDetails = () => {
        setRevenue({
            labels: [2015, 2016, 2017, 2018, 2019, 2020, 2021],
            datasets: [
                {
                    label: "Revenue",
                    data: [50000, 70000, 80000, 90000, 100000, 120000, 200000]
                }
            ]
        })
    }

    const getSalaryDetails = () => {
        setSales({
            labels: [2015, 2016, 2017, 2018, 2019, 2020, 2021],
            datasets: [
                {
                    label: "Sales",
                    data: [50000, 70000, 80000, 90000, 100000, 120000, 200000]
                }
            ]
        })
    }

    useEffect(() => {
        getRevenueDetails();
        getSalaryDetails();
        setRevenue({
            labels: [2015, 2016, 2017, 2018, 2019, 2020, 2021],
            datasets: [
                {
                    label: "Revenue",
                    data: [50000, 70000, 80000, 90000, 100000, 120000, 200000]
                }
            ]
        });
        setSales({
            labels: [2015, 2016, 2017, 2018, 2019, 2020, 2021],
            datasets: [
                {
                    label: "Sales",
                    data: [50000, 70000, 80000, 90000, 100000, 120000, 200000]
                }
            ]
        });
    }, [revenue, sales])


Title,
    Tooltip,
    Legend,

    LinearScale,
    PointElement,